{"version":3,"sources":["components/Header/header.js","components/Table/tableContainer.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","imageSrc","TableContainer","tabledata","console","log","tableRow","length","tableHead","map","val","style","width","rowData","value","rowValue","Modal","heading","children","onClick","onClose","App","getTableHeader","setDateVal","index","tableDataVal","state","createdOn","getTime","setState","checkToday","date1","date2","Date","setHours","checkFutureDate","checkPastDate","openModal","name","url","showModal","imageUrl","modalName","getTableRow","rowMain","todayDate","activeTab","push","moment","format","fromNow","region","href","csv","target","report","clearIcon","onChange","bind","image_url","price","setTabValue","this","tableApiData","data","tableData","viewPortColums","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edac239a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header(props) {\r\n    return(\r\n        <header className=\"header-container\">\r\n        <div className=\"header-wrapper\">\r\n            <img src={props.imageSrc}/>\r\n        </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nfunction TableContainer(props) {\r\n    const { tabledata } = props;\r\n    console.log(tabledata, \"tableData\");\r\n\r\n    const getTableHeadJsx = () => {\r\n        const rowValues =tabledata.tableHead && tabledata.tableHead.map((val) => {\r\n            return(\r\n                <th style={{\"width\": val.width ? val.width : \"\"}}>{val.tableHead}</th>\r\n            )\r\n        })\r\n        return rowValues;\r\n    }\r\n\r\n    const getTableBodyJsx = () => {\r\n        const rowval = tabledata.tableRow.map((val) => {\r\n            return(<tr>\r\n                {val.rowData.map((value) => {\r\n                    return(<td>\r\n                        {value.rowValue}\r\n                    </td>)\r\n                })}\r\n            </tr>)\r\n        }) \r\n          return rowval;\r\n\r\n    }\r\n    return(\r\n        <div className=\"table-wrapper-cont\">\r\n            {\r\n                tabledata && tabledata.tableRow && tabledata.tableRow.length ? <table>\r\n                <thead>\r\n                    <tr>{getTableHeadJsx()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {getTableBodyJsx()}\r\n                </tbody>\r\n            </table> : \r\n            <div>No  data found</div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableContainer;","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal(props) {\r\n    return(\r\n        <div className=\"modal-wrap\">\r\n            <div className=\"inner-wrap\">\r\n                <h1>{props.heading}</h1>\r\n                {props.children && props.children}\r\n                <button onClick={props.onClose}>close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from \"react\";\nimport Header from \"../src/components/Header/header\";\nimport TableContainer from \"../src/components/Table/tableContainer\";\nimport './App.css';\nimport tableApiData from \"../src/store/data.json\";\nimport moment from \"moment\";\nimport DatePicker from 'react-date-picker';\nimport Modal from \"../src/components/Modal/Modal\"\n\nclass App extends React.Component {\nconstructor(props) {\n  super(props);\n  this.state ={\n    tableDataVal: [],\n    activeTab: \"upcoming\",\n    todayDate: new Date(),\n    showModal: false,\n    imageUrl: null,\n    modalName: null \n\n  }\n}\n\ncomponentDidMount () {\n  this.setState({\n    tableDataVal: tableApiData.data\n  })\n}\n  \n\n  getTableHeader = () => {\n    const columns =[\n      {\n        \"tableHead\": \"DATE\",\n        \"width\": 100\n      },\n      {\n        \"tableHead\": \"CAMPAIGN\",\n        \"width\": 200\n      },\n      {\n        \"tableHead\": \"VIEW\",\n        \"width\": 300\n      },\n      {\n        \"tableHead\": \"ACTIONS\",\n        \"width\": 600\n      }\n    ]\n    return columns;\n  }\n\n  setDateVal = (index, val) => {\n    const { tableDataVal } = this.state;\n    tableDataVal[index].createdOn = val.getTime();\n    this.setState({\n      ...tableDataVal\n    })\n  }\n\n  checkToday = (date1, date2) => {\n    if(new Date(date1).setHours(0,0,0,0) == date2.setHours(0,0,0,0)) {\n      return true;\n    } else {\n      return false\n    }\n  }\n\n  checkFutureDate = (date1, date2) => {\n    if(new Date(date1).setHours(0,0,0,0) - date2.setHours(0,0,0,0) > 0){\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  checkPastDate = (date1, date2) => {\n    if( new Date(date1).setHours(0,0,0,0) - date2.setHours(0,0,0,0) < 0) {\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  openModal = (name, url) => {\n    if(!this.state.showModal) {\n      this.setState({\n        showModal: true,\n        imageUrl: url,\n        modalName: name\n      })\n    } else {\n      this.setState({\n        showModal: false\n      })\n    }\n  }\n\n  getTableRow = () => {\n    let rowMain = [];\n    const { tableDataVal, todayDate, activeTab } = this.state;\n    const { setDateVal, checkToday, checkFutureDate, checkPastDate, openModal } = this;\n    console.log(tableDataVal, \"value in row\")\n    tableDataVal && tableDataVal.length && tableDataVal.map((val, index) => {\n      //console.log(moment(val.createdOn).format(\"MMMYYYY,DD\"));\n      //console.log(val.createdOn , \"hiii\")\n      const rowData = [];\n\n      switch(activeTab) {\n        case \"upcoming\": {\n          if(checkFutureDate(val.createdOn, todayDate)) {\n              rowData.push(\n                {\n                  \"rowValue\": <span><span className=\"block\">{moment(val.createdOn).format(\"MMMYYYY,DD\")}</span>{moment(val.createdOn).fromNow()}</span>\n                },\n                {\n                  \"rowValue\": <span>{val.name}{val.region}</span>\n                },\n                {\n                  \"rowValue\": <span>view price</span>\n                },\n                {\n                  \"rowValue\": <span><a href={val.csv} target=\"_blank\">csv</a><a href={val.report}>Report</a><a><DatePicker clearIcon={null} onChange={setDateVal.bind(null, index)}/></a></span>\n                }\n              )\n              rowMain.push({ rowData })\n          }\n          \n        }\n       \n        break;\n        case \"live\": {\n          if(checkToday(val.createdOn ,todayDate)) {\n            rowData.push(\n              {\n                \"rowValue\": <span><span className=\"block\">{moment(val.createdOn).format(\"MMMYYYY,DD\")}</span>{moment(val.createdOn).fromNow()}</span>\n              },\n              {\n                \"rowValue\": <span>{val.name}{val.region}</span>\n              },\n              {\n                \"rowValue\": <span>view price</span>\n              },\n              {\n                \"rowValue\": <span><a href={val.csv} target=\"_blank\">csv</a><a href={val.report}>Report</a><a><DatePicker clearIcon={null} onChange={setDateVal.bind(null, index)}/></a></span>\n              }\n            )\n            rowMain.push({ rowData })\n        }\n        \n        }\n        \n        break;\n        case \"past\": {\n          if(checkPastDate(val.createdOn, todayDate)) {\n            rowData.push(\n              {\n                \"rowValue\": <span><span className=\"block\">{moment(val.createdOn).format(\"MMMYYYY,DD\")}</span>{moment(val.createdOn).fromNow()}</span>\n              },\n              {\n                \"rowValue\": <span>{val.name}{val.region}</span>\n              },\n              {\n                \"rowValue\": <span className=\"price-btn\" onClick={openModal.bind(this, val.name, val.image_url, val.price)}>view price</span>\n              },\n              {\n                \"rowValue\": <span><a href={val.csv} target=\"_blank\">csv</a><a href={val.report}>Report</a><a><DatePicker clearIcon={null} onChange={setDateVal.bind(null, index)}/></a></span>\n              }\n            )\n        }\n        rowMain.push({ rowData })\n        }\n        break;\n      }\n    })\n    return rowMain;\n  }\n\n  setTabValue = (value) => {\n    this.setState({\n      activeTab: value\n    })\n  }\n\n\n\n  render() {\n    const { tableDataVal, activeTab, showModal, modalName, imageUrl } = this.state;\n    const { setTabValue } = this;\n    const tableData = {\n      viewPortColums: 4,\n      tableHead: tableDataVal && tableDataVal.length && this.getTableHeader(),\n      tableRow: tableDataVal && tableDataVal.length && this.getTableRow()\n    }\n    console.log(this.state.todayDate)\n\n    return (  \n      <div className=\"App\">\n        <Header\n          imageSrc=\"https://cdn-www.bluestacks.com/bs-images/bs-logo-new.png\"\n        />\n        <div className=\"table-wrap\">\n          <h1>Manage campaigns</h1>\n          <ul className=\"nav-tab\">\n            <li onClick={setTabValue.bind(this, \"upcoming\")} className={activeTab == \"upcoming\" ? \"active\" : \"\"}>\n              Upcoming campaign\n            </li>\n            <li onClick={setTabValue.bind(this, \"live\")} className={activeTab == \"live\" ? \"active\" : \"\"}>\n              Live campaign\n            </li>\n            <li onClick={setTabValue.bind(this, \"past\")} className={activeTab == \"past\" ? \"active\" : \"\"}>\n              Past campaign\n            </li>\n\n          </ul>\n         {tableDataVal && tableDataVal.length ? <TableContainer\n            tabledata={tableData}\n         /> : \"\"}\n         {showModal && <Modal heading=\"Dasboard popup\" onClose={this.openModal}>\n           <div>\n             <div className=\"image-wrap\"><img src={imageUrl}/><span>{modalName}</span></div>\n              <ul className=\"price-list\">\n                <li><span>1 week- 1month</span> <span>$100</span></li>\n                <li><span>6 month</span> <spa>$500</spa></li>\n                <li><span>1 year</span> <span>$900</span></li>\n              </ul>\n            </div>\n           </Modal>}\n        </div>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}